name: Coverage

on:
  push:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  run_coverage:
    name: Coverage
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        config:
          - {
            name: "Coverage C++",
            os: ubuntu-latest,
            file_memory: "Dictionary",
            build_type: "Debug",
            cc: "gcc",
            cxx: "g++",
          }

    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          submodules: recursive

      - name: Install dependencies
        id: install_deps
        run: scripts/install_deps_ubuntu.sh --dev

      - name: Restore build caches
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ github.job }}-${{ matrix.config.os }}-${{ matrix.config.cxx }}-${{ matrix.config.build_type }}-${{ matrix.config.file_memory }}

      - name: Build
        id: run_cmake
        env:
          CC: ${{ matrix.config.cc }}
          CXX: ${{ matrix.config.cxx }}
          FILE_MEMORY: ${{ matrix.config.file_memory }}
          BUILD_TYPE: ${{ matrix.config.build_type }}
          COVERAGE: ON
          SANITIZER_TYPE: none
        run: scripts/ci/make_tests.sh

      - name: Prepare coverage
        id: prepare_coverage
        run: scripts/ci/prepare_coverage.sh

      - name: Run tests
        id: run_tests
        run: scripts/ci/run_tests.sh

      - name: Export coverage report
        id: export_coverage
        run: scripts/ci/export_coverage.sh

      - name: Upload coverage report to CodeCov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: kuanysh-zhaksylyk/sc-machine
          directory: ${{ github.workspace }}/build
          files: coverage.info
          flags: unittests
          fail_ci_if_error: true
          name: codecov-umbrella
          verbose: true